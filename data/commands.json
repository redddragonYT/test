[null,{"name":"ban","permissions":"BAN_MEMBERS","restriction":"1","_id":"xxiUj","actions":[{"member":"0","varName":"","info":"12","storage":"1","varName2":"avatarURL","name":"Store Member Info"},{"info":"1","infoIndex":"2","storage":"1","varName":"powód","name":"Store Command Params"},{"title":"","author":"","color":"","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatarURL\")}","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"Embed","name":"Create Embed Message"},{"storage":"1","varName":"Embed","fieldName":"","message":"Urzytkownik: **${mentionedUser}** został zbanowany przez **${member}**, ponieważ ${tempVars(\"powód\")} ","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"Embed","channel":"0","varName2":"","name":"Send Embed Message"},{"member":"0","varName":"","reason":"zostałeś zbanowany przez: **${member}**, ponieważ ${tempVars(\"powód\")}","name":"Ban Member"},{"storage":"0","varName":"","name":"Delete Message"}]},{"name":"kick","permissions":"KICK_MEMBERS","restriction":"1","_id":"kaRxB","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"powód","name":"Store Command Params"},{"member":"0","varName":"","info":"12","storage":"1","varName2":"Awatar","name":"Store Member Info"},{"title":"","author":"","color":"","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"Awatar\")}","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"Embed","name":"Create Embed Message"},{"storage":"1","varName":"Embed","fieldName":"","message":"Urzytkownik: **${mentionedUser}** został wyrzucony przez: **${member}**, ponieważ ${tempVars(\"powód\")}","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"Embed","channel":"0","varName2":"","name":"Send Embed Message"},{"member":"0","varName":"","reason":"Zostałeś wyrzucony przez ${member}, ponieważ ${tempVars(\"powód\")}","name":"Kick Member"},{"storage":"0","varName":"","name":"Delete Message"}]},{"name":"pd1","permissions":"ADMINISTRATOR","restriction":"1","_id":"nnYYy","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"pd1","name":"Store Command Params"},{"channel":"0","varName":"","message":"${tempVars(\"pd1\")}","storage":"0","varName2":"","name":"Send Message"},{"storage":"0","varName":"","name":"Delete Message"}]},{"name":"menu","permissions":"NONE","restriction":"1","_id":"DtBMG","actions":[{"member":"1","varName":"","permission":"MANAGE_ROLES","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Member Permissions"},{"info":"19","storage":"1","varName2":"botPrefix","name":"Store Bot Client Info"},{"behavior":"1","interpretation":"1","code":"const botPrefix = tempVars('botPrefix');\nlet reactionArray = [];\nlet rectarray = globalVars('reactionRoleInf');\nconst _this = this;\nlet tempRole;\nlet emojiArray = [];\nlet roleArray = [];\nlet errorCatch = 5;\nlet localEmoji;\nlet localEmojiG;\nlet emojiTimerRe = 0;\nvar interval;\nlet regex = /[^\\u0000-\\u00ff]/;\nconst fs = require('fs');\n\nfunction specCheck(str) {\n    if (!str.length) return false;\n    if (str.charCodeAt(0) > 255) return true;\n    return regex.test(str);\n}\n\n// Settings\nlet grabAllEmoji = false; // Set true if you want the bot to use global emojis from all the servers its in. (May cause slowdowns in larger servers)\n//\n\nif (grabAllEmoji) {\n    localEmoji = (client || this.getDBM().Bot.bot).emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in one of the servers that the bot is in!\";\n} else {\n    localEmoji = msg.guild.emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in this server!\";\n}\n\nmsg.channel.send(`Wiraj w auto rolach.\\nProszę teraz wspomnieć/nazwa roli (wielkość liter ma znaczenie) wraz z emoiji.\\nEx. @role/role ✅`)\n    .then((message) => {\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.split(/ +/g).length > 1) {\n                    if (collected.first().content.split(/ +/g)[0] != null) {\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n                            var roleMentioned;\n                            if (collected.first().mentions.roles.first() != null) {\n                                roleMentioned = collected.first().mentions.roles.first();\n                            } else {\n                                roleMentioned = tstValidRole;\n                            }\n                            if (specCheck(unicodeStored) || unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                var emoj;\n                                if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                    unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                    emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                    if (emoji.length > 0) {\n                                        unicodeStored = emoji[0];\n                                        delete unicodeStored['guild']\n                                        reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                        emojiArray.push(unicodeStored);\n                                        roleArray.push(roleMentioned.id);\n                                        message.edit(`przyłączyłeś do roli **${roleMentioned.name}** reakcje ${unicodeStored}.\\nJeżeli to jest poprawnie, proszę odpowiedz \"confirm\".\\nJeżeli proszę nie odpowiadać \"cancel\" aby anulować zadanie.`);\n                                        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                                                max: 1,\n                                                time: 60000,\n                                                errors: ['time'],\n                                            })\n                                            .then((collected) => {\n                                                msg.author.lastMessage.delete();\n                                                if (collected.first().content.toLowerCase() == \"confirm\") {\n                                                    reAsk(message)\n                                                } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                                                    message.delete();\n                                                    msg.channel.send(\"zadanie zostało anulowane.\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                                } else {\n                                                    message.delete();\n                                                    msg.channel.send(\"zadanie zostało anulowane, nie podałeś prawidłowej odpowiedzi!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                                }\n                                            }).catch(() => {\n                                                message.delete();\n                                                msg.channel.send('Sorry, nie dostarczyłeś prawidłowej odpowiedzi na czas!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!');\n                                            });\n                                    } else {\n                                        message.delete();\n                                        msg.channel.send(`zadanie zostało anulowane, nie podałeś niestandardowego emoji!\\n${localEmojiG}\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!`);\n                                    }\n                                } else {\n                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                    emojiArray.push(unicodeStored);\n                                    roleArray.push(roleMentioned.id);\n                                    message.edit(`przyłączyłeś do roli **${roleMentioned.name}** reakcje ${unicodeStored}.\\nJeżeli to jest poprawnie, proszę odpowiedz \"confirm\".\\nJeżeli proszę nie odpowiadać \"cancel\" aby anulować zadanie.`);\n                                    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                                            max: 1,\n                                            time: 60000,\n                                            errors: ['time'],\n                                        })\n                                        .then((collected) => {\n                                            msg.author.lastMessage.delete();\n                                            if (collected.first().content.toLowerCase() == \"confirm\") {\n                                                reAsk(message)\n                                            } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                                                message.delete();\n                                                msg.channel.send(\"\"zadanie zostało anulowane.\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                            } else {\n                                                message.delete();\n                                                msg.channel.send(\"zadanie zostało anulowane, nie podałeś prawidłowej odpowiedzi!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                            }\n                                        }).catch(() => {\n                                            message.delete();\n                                            msg.channel.send('Sorry, nie dostarczyłeś prawidłowej odpowiedzi na czas!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!');\n                                        });\n                                }\n                            } else {\n                                message.delete();\n                                msg.channel.send(\"Zadanie zostało anulowane, ponieważ podałeś złe emoiji!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                            }\n\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"zadanie zostało anulowane, nie podałeś poprawnej odpowiedzi!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                        }\n                    } else {\n                        message.delete();\n                        msg.channel.send(\"zadanie zostało anulowane, nie podałeś prawidłowej wymienionej roli!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                    }\n                } else {\n                    message.delete();\n                    msg.channel.send(\"zadanie zostało anulowane, nie podałeś roli emoji / wspomnianej roli!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                }\n            }).catch((error) => {\n                console.log(error);\n                message.delete();\n                msg.channel.send('Przepraszamy, nie dostarczyłeś prawidłowej odpowiedzi na czas!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!');\n            });\n    })\n\nfunction reAsk(message, extra) {\n    if (extra == null) {\n        extra = \" \";\n    }\n    if (reactionArray.length != 10) {\n        var finalText = \"\";\n        reactionArray.forEach(subarray => {\n            finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n        })\n        message.edit(`Do tej pory masz następujące połączenia (Max 10)\\n ${finalText}\\n\\nJeśli chcesz dołączyć kolejną reakcję do roli, wstaw rolę wraz z emoji.\\nJeśli nie, proszę odpowiedzieć \"done”.\\nJeśli chcesz anulować zadanie, odpowiedz \"cancel\"\\n${extra}`);\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.toLowerCase() == \"done\") {\n                    done(message)\n                } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                    message.delete();\n                    msg.channel.send(\"zadanie zostało anulowane.\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                } else {\n                    if (collected.first().content.split(/ +/g).length > 1) {\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n                            if (collected.first().mentions.roles.first() != null) {\n                                roleMentioned = collected.first().mentions.roles.first();\n                            } else {\n                                roleMentioned = tstValidRole;\n                            }\n                            if (unicodeStored != null) {\n                                if (!emojiArray.includes(unicodeStored)) {\n                                    if (!roleArray.includes(roleMentioned.id)) {\n                                        if (specCheck(unicodeStored) || unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                            var emoji;\n                                            if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                                unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                                emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                                if (emoji.length > 0) {\n                                                    unicodeStored = emoji[0];\n                                                    delete unicodeStored['guild']\n                                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                    emojiArray.push(unicodeStored);\n                                                    roleArray.push(roleMentioned.id);\n                                                    reAsk(message);\n                                                } else {\n                                                    if (errorCatch > 0) {\n                                                        errorCatch -= 1;\n                                                        reAsk(message, `Podaj poprawne niestandardowe emoji!\\n${localEmojiG}\\nTries left - ${errorCatch}`);\n                                                    } else {\n                                                        message.delete();\n                                                        msg.channel.send(`zadanie zostało anulowane, podałeś nieprawidłowe niestandardowe emoji!\\n${localEmojiG}\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!`);\n                                                    }\n                                                }\n                                            } else {\n                                                reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                emojiArray.push(unicodeStored);\n                                                roleArray.push(roleMentioned.id);\n                                                reAsk(message);\n                                            }\n\n                                        } else {\n\n                                            if (errorCatch > 0) {\n                                                errorCatch -= 1;\n                                                reAsk(message, `Nie używaj dwukrotnie tego samego emoji!\\nPozostaje - ${errorCatch}`)\n                                            } else {\n                                                message.delete();\n                                                msg.channel.send(\"zadanie zostało anulowane, używałeś tego samego emoji dwa razy dla różnych ról!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                            }\n                                        }\n                                    } else {\n                                        if (errorCatch > 0) {\n                                            errorCatch -= 1;\n                                            reAsk(message, `użyłeś tej samej roli dwa razy w jednym zadaniu!\\nPozostaje - ${errorCatch}`)\n                                        } else {\n                                            message.delete();\n                                            msg.channel.send(\"Zadanie zostało anulowane, użyłeś tej samej roli dwa razy w jednym zadaniu!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                        }\n                                    }\n                                } else {\n                                    if (errorCatch > 0) {\n                                        errorCatch -= 1;\n                                        reAsk(message, `Podaj prawidłowy emoji!\\nPozostaje - ${errorCatch}`)\n                                    } else {\n                                        message.delete();\n                                        msg.channel.send(\"Zadanie zostało anulowane, nie podałeś prawidłowego emoji!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                                    }\n                                }\n                            }\n                        } else {\n                            if (errorCatch > 0) {\n                                errorCatch -= 1;\n                                reAsk(message, `Podaj prawidłową rolę!\\nPozostaje - ${errorCatch}`)\n                            } else {\n                                message.delete();\n                                msg.channel.send(\"Zadanie zostało anulowane, nie wspomniałeś o żadnej roli!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                            }\n                        }\n                    } else {\n                        if (errorCatch > 0) {\n                            errorCatch -= 1;\n                            reAsk(message, `Podaj prawidłową emoji / rolę!\\nPozostaje - ${errorCatch}`)\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"zadanie zostało anulowane, nie podałeś roli emoji / wspomnianej roli!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!\");\n                        }\n                    }\n                }\n            }).catch(() => {\n                message.delete();\n                msg.channel.send('Przepraszamy, nie dostarczyłeś prawidłowej odpowiedzi na czas!\\nProsze wykonać ponownie komende aby wykonać zadanie ponownie!');\n            });\n    } else {\n        done(message);\n    }\n\n}\n\nfunction done(message) {\n    var finalText = \"\";\n    reactionArray.forEach(subarray => {\n        finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n    })\n    message.edit(`Ostateczne menu konformacji \\ n \\ nPoniżej znajduje się lista reakcji na ich role \\ n $ {finalText} \\ n \\ nJeśli to jest poprawne, prosimy o odpowiedź w kanale tekstowym, do którego zostanie wysłane menu ról. \\ NJeśli to nie jest popraw, odpowiedz „cancel”, aby anulować zadanie.`)\n    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n            max: 1,\n            time: 60000,\n            errors: ['time'],\n        })\n        .then((collected) => {\n            msg.author.lastMessage.delete();\n            if (collected.first().mentions.channels.first()) {\n                var menchannel = collected.first().mentions.channels.first()\n                message.delete();\n                menchannel.send({\n                        embed: {\n                            color: 0xffff00,\n                            title: \"Role reaction menu\",\n                            description: `Reaguj z wymienioną reakcją, aby uzyskać rolę dla tej reakcji.\\n${finalText}`,\n                            timestamp: new Date()\n                        }\n                    })\n                    .then(embedmessage => {\n                        interval = setInterval(function() { emojiTimerInt(embedmessage, reactionArray); }, 500)\n                        rectarray[embedmessage.id] = reactionArray\n                        _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n                        fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                            if(err) {\n                                return console.log(err);\n                            }\n                        });\n                    })\n            } else if (collected.first().content == \"cancel\") {\n                message.delete();\n                msg.channel.send(\"Zadanie zostało anulowane. \\ NPonownie uruchom komendę, aby ponownie przejść do zadania!\");\n            } else {\n                message.delete();\n                msg.channel.send(\"Zadanie zostało anulowane, nie podałeś prawidłowej odpowiedzi! \\ nPonownie uruchom polecenie, aby ponownie przejść do zadania!\");\n            }\n        }).catch(() => {\n            message.delete();\n            msg.channel.send('Przepraszamy, nie dostarczyłeś prawidłowej odpowiedzi na czas! \\ Ponownie uruchom polecenie, aby ponownie przejść do zadania!');\n        });\n}\n\nfunction emojiTimerInt(message, subarray) {\n    message.react(subarray[emojiTimerRe][0])\n    emojiTimerRe += 1;\n\n    if (emojiTimerRe == subarray.length) {\n        clearInterval(interval);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"comType":"0"},{"name":"clear","permissions":"MANAGE_CHANNELS","restriction":"1","_id":"JcRgP","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"clear","name":"Store Command Params"},{"channel":"0","count":"${tempVars(\"clear\")}","condition":"0","custom":"","varName":"","name":"Delete Bulk Messages"},{"channel":"0","varName":"","message":"spr${member} wyczyścił czat","storage":"0","varName2":"","name":"Send Message"}]},{"name":"mute","permissions":"MUTE_MEMBERS","restriction":"1","_id":"sEmoK","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"kto","name":"Store Command Params"},{"info":"1","find":"mute","storage":"1","varName":"mute","name":"Find Role"},{"member":"0","varName2":"","role":"3","varName":"mute","name":"Add Member Role"},{"channel":"0","varName":"","message":"${member} Wyciszył ${mentionedUser}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"unmute","permissions":"MUTE_MEMBERS","restriction":"1","_id":"RdPlv","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"kto","name":"Store Command Params"},{"info":"1","find":"mute","storage":"1","varName":"unmute","name":"Find Role"},{"member":"0","varName2":"","role":"3","varName":"unmute","name":"Remove Member Role"},{"channel":"0","varName":"","message":"${mentionedUser} przestał mieć zaszyte usta dzięki ${member}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"rolemenu","permissions":"NONE","restriction":"1","_id":"DtBMG","actions":[{"member":"1","varName":"","permission":"MANAGE_ROLES","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Member Permissions"},{"info":"19","storage":"1","varName2":"botPrefix","name":"Store Bot Client Info"},{"behavior":"1","interpretation":"1","code":"const botPrefix = tempVars('botPrefix');\nlet reactionArray = [];\nlet rectarray = globalVars('reactionRoleInf');\nconst _this = this;\nlet tempRole;\nlet emojiArray = [];\nlet roleArray = [];\nlet errorCatch = 5;\nlet localEmoji;\nlet localEmojiG;\nlet emojiTimerRe = 0;\nvar interval;\nlet regex = /[^\\u0000-\\u00ff]/;\nconst fs = require('fs');\n\nfunction specCheck(str) {\n    if (!str.length) return false;\n    if (str.charCodeAt(0) > 255) return true;\n    return regex.test(str);\n}\n\n// Settings\nlet grabAllEmoji = false; // Set true if you want the bot to use global emojis from all the servers its in. (May cause slowdowns in larger servers)\n//\n\nif (grabAllEmoji) {\n    localEmoji = (client || this.getDBM().Bot.bot).emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in one of the servers that the bot is in!\";\n} else {\n    localEmoji = msg.guild.emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in this server!\";\n}\n\nmsg.channel.send(`Welcome to the autorole promt.\\nPlease now mention/name a role (case sensitive) along with an emoji.\\nEx. @role/role ✅`)\n    .then((message) => {\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.split(/ +/g).length > 1) {\n                    if (collected.first().content.split(/ +/g)[0] != null) {\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n                            var roleMentioned;\n                            if (collected.first().mentions.roles.first() != null) {\n                                roleMentioned = collected.first().mentions.roles.first();\n                            } else {\n                                roleMentioned = tstValidRole;\n                            }\n                            if (specCheck(unicodeStored) || unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                var emoj;\n                                if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                    unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                    emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                    if (emoji.length > 0) {\n                                        unicodeStored = emoji[0];\n                                        delete unicodeStored['guild']\n                                        reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                        emojiArray.push(unicodeStored);\n                                        roleArray.push(roleMentioned.id);\n                                        message.edit(`You have attached the role **${roleMentioned.name}** to the reaction ${unicodeStored}.\\nIf this is correct, please respond \"confirm\".\\nIf not, please respond \"cancel\" to cancel the prompt.`);\n                                        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                                                max: 1,\n                                                time: 60000,\n                                                errors: ['time'],\n                                            })\n                                            .then((collected) => {\n                                                msg.author.lastMessage.delete();\n                                                if (collected.first().content.toLowerCase() == \"confirm\") {\n                                                    reAsk(message)\n                                                } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                                                    message.delete();\n                                                    msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n                                                } else {\n                                                    message.delete();\n                                                    msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\");\n                                                }\n                                            }).catch(() => {\n                                                message.delete();\n                                                msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n                                            });\n                                    } else {\n                                        message.delete();\n                                        msg.channel.send(`Prompt has been cancelled, you didn't provide a custom emoji!\\n${localEmojiG}\\nPlease re-execute the command to go through the prompt again!`);\n                                    }\n                                } else {\n                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                    emojiArray.push(unicodeStored);\n                                    roleArray.push(roleMentioned.id);\n                                    message.edit(`You have attached the role **${roleMentioned.name}** to the reaction ${unicodeStored}.\\nIf this is correct, please respond \"confirm\".\\nIf not, please respond \"cancel\" to cancel the prompt.`);\n                                    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                                            max: 1,\n                                            time: 60000,\n                                            errors: ['time'],\n                                        })\n                                        .then((collected) => {\n                                            msg.author.lastMessage.delete();\n                                            if (collected.first().content.toLowerCase() == \"confirm\") {\n                                                reAsk(message)\n                                            } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                                                message.delete();\n                                                msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n                                            } else {\n                                                message.delete();\n                                                msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\");\n                                            }\n                                        }).catch(() => {\n                                            message.delete();\n                                            msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n                                        });\n                                }\n                            } else {\n                                message.delete();\n                                msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid emoji!\\nPlease re-execute the command to go through the prompt again!\");\n                            }\n\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\");\n                        }\n                    } else {\n                        message.delete();\n                        msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                    }\n                } else {\n                    message.delete();\n                    msg.channel.send(\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                }\n            }).catch((error) => {\n                console.log(error);\n                message.delete();\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n    })\n\nfunction reAsk(message, extra) {\n    if (extra == null) {\n        extra = \" \";\n    }\n    if (reactionArray.length != 10) {\n        var finalText = \"\";\n        reactionArray.forEach(subarray => {\n            finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n        })\n        message.edit(`So far you have the following connections (Max 10)\\n ${finalText}\\n\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\nIf not, please reply with \"done\".\\nIf you would like to cancel the prompt, please respond with \"cancel\"\\n${extra}`);\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.toLowerCase() == \"done\") {\n                    done(message)\n                } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                    message.delete();\n                    msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n                } else {\n                    if (collected.first().content.split(/ +/g).length > 1) {\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n                            if (collected.first().mentions.roles.first() != null) {\n                                roleMentioned = collected.first().mentions.roles.first();\n                            } else {\n                                roleMentioned = tstValidRole;\n                            }\n                            if (unicodeStored != null) {\n                                if (!emojiArray.includes(unicodeStored)) {\n                                    if (!roleArray.includes(roleMentioned.id)) {\n                                        if (specCheck(unicodeStored) || unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                            var emoji;\n                                            if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                                unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                                emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                                if (emoji.length > 0) {\n                                                    unicodeStored = emoji[0];\n                                                    delete unicodeStored['guild']\n                                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                    emojiArray.push(unicodeStored);\n                                                    roleArray.push(roleMentioned.id);\n                                                    reAsk(message);\n                                                } else {\n                                                    if (errorCatch > 0) {\n                                                        errorCatch -= 1;\n                                                        reAsk(message, `Please provide a valid custom emoji!\\n${localEmojiG}\\nTries left - ${errorCatch}`);\n                                                    } else {\n                                                        message.delete();\n                                                        msg.channel.send(`Prompt has been cancelled, you provided an invalid custom emoji!\\n${localEmojiG}\\nPlease re-execute the command to go through the prompt again!`);\n                                                    }\n                                                }\n                                            } else {\n                                                reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                emojiArray.push(unicodeStored);\n                                                roleArray.push(roleMentioned.id);\n                                                reAsk(message);\n                                            }\n\n                                        } else {\n\n                                            if (errorCatch > 0) {\n                                                errorCatch -= 1;\n                                                reAsk(message, `Please don't use the same emoji twice!\\nTries left - ${errorCatch}`)\n                                            } else {\n                                                message.delete();\n                                                msg.channel.send(\"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\nPlease re-execute the command to go through the prompt again!\");\n                                            }\n                                        }\n                                    } else {\n                                        if (errorCatch > 0) {\n                                            errorCatch -= 1;\n                                            reAsk(message, `Please don't use the same role twice!\\nTries left - ${errorCatch}`)\n                                        } else {\n                                            message.delete();\n                                            msg.channel.send(\"Prompt has been cancelled, you used the same role twice in the prompt!\\nPlease re-execute the command to go through the prompt again!\");\n                                        }\n                                    }\n                                } else {\n                                    if (errorCatch > 0) {\n                                        errorCatch -= 1;\n                                        reAsk(message, `Please provide a valid emoji!\\nTries left - ${errorCatch}`)\n                                    } else {\n                                        message.delete();\n                                        msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid emoji!\\nPlease re-execute the command to go through the prompt again!\");\n                                    }\n                                }\n                            }\n                        } else {\n                            if (errorCatch > 0) {\n                                errorCatch -= 1;\n                                reAsk(message, `Please mention a valid role!\\nTries left - ${errorCatch}`)\n                            } else {\n                                message.delete();\n                                msg.channel.send(\"Prompt has been cancelled, you didn't mention a valid role!\\nPlease re-execute the command to go through the prompt again!\");\n                            }\n                        }\n                    } else {\n                        if (errorCatch > 0) {\n                            errorCatch -= 1;\n                            reAsk(message, `Please provide a valid emoji/role!\\nTries left - ${errorCatch}`)\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                        }\n                    }\n                }\n            }).catch(() => {\n                message.delete();\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n    } else {\n        done(message);\n    }\n\n}\n\nfunction done(message) {\n    var finalText = \"\";\n    reactionArray.forEach(subarray => {\n        finalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n    })\n    message.edit(`Final conformation menu\\n\\nBelow is the list of reactions to their roles\\n${finalText}\\n\\nIf this is correct, please respond with a mention to a text channel where the role menu will be sent.\\nIf this isn't correct, respond with \"cancel\" to cancel the prompt.`)\n    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n            max: 1,\n            time: 60000,\n            errors: ['time'],\n        })\n        .then((collected) => {\n            msg.author.lastMessage.delete();\n            if (collected.first().mentions.channels.first()) {\n                var menchannel = collected.first().mentions.channels.first()\n                message.delete();\n                menchannel.send({\n                        embed: {\n                            color: 0xffff00,\n                            title: \"Role Reaction Menu\",\n                            description: `React with the reaction listed to get the listed role for that reaction.\\n${finalText}`,\n                            timestamp: new Date()\n                        }\n                    })\n                    .then(embedmessage => {\n                        interval = setInterval(function() { emojiTimerInt(embedmessage, reactionArray); }, 500)\n                        rectarray[embedmessage.id] = reactionArray\n                        _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n                        fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                            if(err) {\n                                return console.log(err);\n                            }\n                        });\n                    })\n            } else if (collected.first().content == \"cancel\") {\n                message.delete();\n                msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n            } else {\n                message.delete();\n                msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\");\n            }\n        }).catch(() => {\n            message.delete();\n            msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n        });\n}\n\nfunction emojiTimerInt(message, subarray) {\n    message.react(subarray[emojiTimerRe][0])\n    emojiTimerRe += 1;\n\n    if (emojiTimerRe == subarray.length) {\n        clearInterval(interval);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"comType":"0"},{"name":"setuptch","permissions":"NONE","restriction":"1","_id":"RtpvK","actions":[{"member":"1","varName":"","permission":"ADMINISTRATOR","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"8","name":"Check Member Permissions"},{"channel":"1","varName":"","info":"0","storage":"1","varName2":"mentCh","name":"Store Channel Info"},{"storage":"1","varName":"mentCh","comparison":"5","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"10","name":"Check Variable Type"},{"channel":"1","varName":"","info":"1","storage":"1","varName2":"chnID","name":"Store Channel Info"},{"behavior":"0","interpretation":"1","code":"const fs = require('fs');\nconst chnlID = tempVars('chnID');\n\nif(fs.existsSync('./resources/serverRoleMenu.json')) {\n    fs.readFile('./resources/serverRoleMenu.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        \n        var newData = JSON.parse(data);\n        newData[msg.guild.id] = chnlID;\n\n        fs.writeFile('./resources/serverRoleMenu.json', JSON.stringify(newData), (err) => {  \n            if (err) {\n                console.log(err);\n            }\n        });\n\n    })\n\n} else {\n    fs.writeFile('./resources/serverRoleMenu.json', '{}', (err) => {  \n        if (err) {\n            console.log(err);\n        }\n\n        fs.readFile('./resources/serverRoleMenu.json', function read(err, data) {\n            if (err) {\n                throw err;\n            }\n    \n            var newData = JSON.parse(data);\n            newData[msg.guild.id] = chnlID;\n    \n            fs.writeFile('./resources/serverRoleMenu.json', JSON.stringify(newData), (err) => {  \n                if (err) {\n                    console.log(err);\n                }\n            });\n        })\n    });\n}","storage":"0","varName":"","name":"Run Script"},{"channel":"0","varName":"","message":":white_check_mark: kanał został zaaktualizowany do ${tempVars(\"mentCh\")}","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":"Nie masz permisji","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":":x: Oznacz kanał gościu","storage":"0","varName2":"","name":"Send Message"}],"comType":"0"}]